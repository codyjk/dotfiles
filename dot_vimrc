" vim-plug
call plug#begin('~/.vim/plugged')
Plug '~/.fzf'
Plug 'junegunn/fzf.vim'
Plug 'tpope/vim-rhubarb'
Plug 'tpope/vim-surround'
Plug 'sheerun/vim-polyglot'
Plug 'christoomey/vim-tmux-navigator'
Plug 'tpope/vim-fugitive'
Plug 'rust-lang/rust.vim'
Plug 'tpope/vim-vinegar'
Plug 'github/copilot.vim'
Plug 'nvim-lua/plenary.nvim'
Plug 'ruifm/gitlinker.nvim'
Plug 'sainnhe/everforest'
Plug 'weirongxu/plantuml-previewer.vim'
Plug 'tyru/open-browser.vim'
Plug 'nvim-lua/plenary.nvim'
Plug 'nvim-telescope/telescope.nvim', { 'tag': '0.1.0' }
Plug 'windwp/nvim-autopairs'
Plug 'catppuccin/nvim', {'as': 'catppuccin'}
call plug#end()

" Cancel the compatibility with Vi. Essential if you want
" to enjoy the features of Vim
set nocompatible

" -- Display
set title                 " Update the title of your window or your terminal
set number                " Display line numbers
set ruler                 " Display cursor position
set wrap                  " Wrap lines when they are too long
set scrolloff=3           " Display at least 3 lines around you cursor (for scrolling)
set guioptions=T          " Enable the toolbar

" -- Search
set ignorecase            " Ignore case when searching
set smartcase             " If there is an uppercase in your search term
                          " search case sensitive again
set incsearch             " Highlight search results when typing
set hlsearch              " Highlight search results

" -- Beep
set visualbell            " Prevent Vim from beeping
set noerrorbells          " Prevent Vim from beeping

" Backspace behaves as expected
set backspace=indent,eol,start

" Hide buffer (file) instead of abandoning when switching
" to another buffer
set hidden

" Enable syntax highlighting
syntax enable

" Use new regular expression engine
set re=0

" Enable file specific behavior like syntax highlighting and indentation
filetype on
filetype plugin on
filetype indent on

" Set up theme and colors. Silence any colorscheme errors since it won't be
" present the first time vimrc is loaded
" https://github.com/tmux/tmux/issues/1246
if exists('+termguicolors')
  let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
  let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
  set termguicolors
endif
let g:catppuccin_flavour = "frappe" " latte, frappe, macchiato, mocha

lua << EOF
require("catppuccin").setup()
EOF

silent! colorscheme catppuccin

" Disabling the directional keys
map <up> <nop>
map <down> <nop>
map <left> <nop>
map <right> <nop>
imap <up> <nop>
imap <down> <nop>
imap <left> <nop>
imap <right> <nop>

" Set <Leader>
let mapleader = ","

" show existing tab with 2 spaces width
set tabstop=2

" when indenting with '>', use 2 spaces width
set shiftwidth=2

" On pressing tab, insert 2 spaces
set expandtab

" Statusline
set laststatus=2
set statusline=%<%f\ (%{&ft})\ %-4(%m%)%=%-19(%3l/%3L,%02c%03V%)

" Line length marker
set colorcolumn=80

" Ctrl-l to remove highlighted stuff
nmap <Leader>x :nohl <CR>

" Allow jsx in js files
let g:jsx_ext_required = 0

" Use `.bash_profile` and aliases in shell
set shell=/bin/bash\ --rcfile\ ~/.bash_profile

" Split down and to the right
set splitbelow
set splitright

" remove trailing whitespace on save
autocmd BufWritePre * :%s/\s\+$//e

" simple navigation through clist
noremap <C-n> :cn<cr>

" allow project specific stuff
set exrc
set secure

" copilot config
let g:copilot_no_tab_map = v:true
imap <expr> <Plug>(vimrc:copilot-dummy-map) copilot#Accept("\<Tab>")
imap <silent><script><expr> <C-J> copilot#Accept("\<CR>")
let g:copilot_node_command = "/Users/cjk/.asdf/installs/nodejs/17.9.1/bin/node"

" netrw file explorer config
" default to tree view
let g:netrw_liststyle = 3

" width of explorer is 20% of window
let g:netrw_winsize = 20

" close explorer after selecting file
let g:netrw_altv = 0

" telescope
nnoremap <leader>f <cmd>Telescope<cr>
nnoremap <leader>ff <cmd>Telescope find_files<cr>
nnoremap <leader>fg <cmd>Telescope live_grep<cr>
nnoremap <leader>fb <cmd>Telescope buffers<cr>
nnoremap <leader>fh <cmd>Telescope help_tags<cr>
nnoremap <C-p> <cmd>Telescope git_files<CR>
nnoremap <leader>b <cmd>Telescope buffers<CR>
nnoremap <leader>h <cmd>Telescope help_tags<CR>

" typescript highlighting for prisma
autocmd BufNewFile,BufRead *.prisma set syntax=typescript

" completion
set completeopt=menu,menuone,noselect
